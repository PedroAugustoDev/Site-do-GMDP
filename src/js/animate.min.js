/* 
 *
 * Animation 100% by: Pedro Augusto - 3DS - ETEC de Poá 
 * JS change letters of div "span-text" and add class "animeText"
 * CSS anime letters
 * Why i used english? I do not know hehe
 * 
 */

const doc = document; //document
const len = 4;
let timeAnime = 0.1; //time to letter down and up

window.addEventListener('load', () => {

    const keyWordAnimation = ["simples.", "fácil.", "modernos.","produtivos."]; //words to animate in span
    const spanText = doc.querySelector('.span-text');
    const initialWord = keyWordAnimation[3].slice(''); //first word
    const cardAnime = doc.querySelectorAll('.card'); //first animeScroll item
    const contentMoreSection = document.querySelector('.content-read');

    function createAnimationElement(word, append, element) {
        for (let i of word) {
            let e = doc.createElement(element);
            e.setAttribute('style', '--i:' + (timeAnime + 0.1));
            e.classList.add('animeText');
            e.textContent = i;
            append.appendChild(e)
            timeAnime++;
        }
    }
    //change spans letter to other letter
    /**
     * @param {sArray} arrayWord => array with words to chose random<>;
     * @param {HTMLElement} element => element HTML<>;
     * @param {Int} length => max size to random number, start with 0<>;
     */
    function changeLetters(arrayWord, element, length) {
        let word = arrayWord[Math.floor(Math.random() * Math.floor(length))].split('');
        let i = 0;
        element.childNodes.forEach((child) => {
            child.textContent = word[i];
            i++;
        });
    }
    /**
     * 
     * @param {HTMLELemnt} content -> html element to anime (div, footer, span, someone)
     * @param {String} classString -> class css in format String to set Opacity on scroll
     */
    function animeScroll(content, classString) {
        window.addEventListener('scroll', () => {
            let contentPositon = content.getBoundingClientRect().top;
            let screenPositon = window.innerHeight;
            if (contentPositon < screenPositon) content.classList.add(classString);
            else content.classList.remove(classString)
        });
    }

    function animeScrollArray(content, classString, isArray) {
        if (isArray) {
            window.addEventListener('scroll', () => {
                content.forEach((e) => {
                    let contentPositon = e.getBoundingClientRect().top;
                    let screenPositon = window.innerHeight;
                    if (contentPositon < screenPositon) e.classList.add(classString);
                    else e.classList.remove(classString)
                });
            });
        } else console.log("não é um array")
    }

    //call functions
    const interval = setInterval(() => {
        changeLetters(keyWordAnimation, spanText, len);
    }, 3600);
    createAnimationElement(initialWord, spanText, 'span');
    animeScrollArray(cardAnime, "active", true);


    const accordion = document.querySelectorAll('.accordion');
    accordion.forEach(e => {
        e.addEventListener('click', function(){
             e.classList.toggle('active');
        })
    });

    

    const contentReadMore = document.querySelector('.content-read')
    const readMore = document.querySelectorAll('.read-more');
    readMore.forEach(element => {
        element.addEventListener('click', function(){
            contentReadMore.classList.toggle('active');
            element.style.display = "none";
        })
    });

    animeScroll(contentMoreSection, 'anime');

});